rules_version = '2';

// Craft rules based on data in your Firestore database
// allow write: if firestore.get(
//    /databases/(default)/documents/users/$(request.auth.uid)).data.isAdmin == true;
service firebase.storage {
  match /b/{bucket}/o {
    // =====================================================================
    // KULLANICI AVATAR RESİMLERİ
    // =====================================================================
    match /avatars/{userId}/{allPaths=**} {
      // Kullanıcı kendi avatar'ını okuyabilir ve yazabilir
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId &&
                   request.resource.contentType.matches('image/.*') &&
                   request.resource.size < 5 * 1024 * 1024; // < 5MB yalnızca görsel
    }

    // =====================================================================
    // BLOG KAPAK RESİMLERİ
    // =====================================================================
    match /blog_covers/{slug}/{allPaths=**} {
      // Herkes blog kapak resimlerini okuyabilir
      allow read: if true;
      // Sadece admin kullanıcılar blog kapakları yükleyebilir (yalnızca görsel ve boyut sınırlı)
      allow write: if request.auth != null && request.auth.token.admin == true &&
                   request.resource.contentType.matches('image/.*') &&
                   request.resource.size < 10 * 1024 * 1024; // < 10MB
    }

    // =====================================================================
    // PUSH BİLDİRİM BANNER GÖRSELLERİ (admin)
    // =====================================================================
    match /push_banners/{allPaths=**} {
      // Banner'lar herkese okunabilir (bildirim açıldığında görsel göstermek için)
      allow read: if true;
      // Yalnızca admin kullanıcılar yükleyebilir / silebilir (yalnızca görsel)
      allow write: if request.auth != null && request.auth.token.admin == true &&
                   request.resource.contentType.matches('image/.*') &&
                   request.resource.size < 10 * 1024 * 1024; // < 10MB
    }

    // =====================================================================
    // KULLANICI DOSYALARI (genel)
    // =====================================================================
    match /user_files/{userId}/{allPaths=**} {
      // Kullanıcı kendi dosyalarını okuyabilir ve yazabilir
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId &&
                   request.resource.size < 20 * 1024 * 1024; // < 20MB
    }

    // =====================================================================
    // GENEL DOSYALAR (herkese açık)
    // =====================================================================
    match /public/{allPaths=**} {
      // Herkes okuyabilir
      allow read: if true;
      // Sadece admin kullanıcılar yazabilir (tip ve boyut sınırı)
      allow write: if request.auth != null && request.auth.token.admin == true &&
                   request.resource.size < 20 * 1024 * 1024;
    }

    // =====================================================================
    // SORU RESİMLERİ
    // =====================================================================
    match /question_images/{allPaths=**} {
      // GÜVENLİK GÜNCELLEMESİ: Soru resimlerini yalnızca giriş yapmış kullanıcılar okuyabilir.
      allow read: if request.auth != null;
      // Sadece admin kullanıcılar soru resimleri yükleyebilir (yalnızca görsel)
      allow write: if request.auth != null && request.auth.token.admin == true &&
                   request.resource.contentType.matches('image/.*') &&
                   request.resource.size < 10 * 1024 * 1024; // < 10MB
    }

    // =====================================================================
    // VARSAYILAN KURAL - DİĞER TÜM DOSYALAR
    // =====================================================================
    match /{allPaths=**} {
      // Diğer tüm dosyalar için erişim engellendi
      allow read, write: if false;
    }
  }
}
